// Bootstrap overrides
$blue:				#0c84b5;
$enable-rounded:	false;
$enable-transitions:true;
// Sony Fanatic Variables
$email:		#b50c84;
$facebook:	#3b5998;
$print:		#84b50c;
$transition:all 250ms cubic-bezier(.06,.78,.17,.96);
$twitter:	#00aced;
// Applies the given styles only when the browser support CSS3 3D transforms.
@mixin if-supports-3d-transforms() {
  @media (-webkit-transform-3d) {
    // Old Safari, Old Android
    // http://caniuse.com/#feat=css-featurequeries
    // https://developer.mozilla.org/en-US/docs/Web/CSS/@media/-webkit-transform-3d
    @content;
  }

  @supports (transform: translate3d(0,0,0)) {
    // The Proper Way: Using a CSS feature query
    @content;
  }
}
// Ratio
	@mixin aspect-ratio($arglist... /*$width/$ratio, $height*/){
		$map : keywords($arglist);
		$height: map-get($map, height) or nth-or-null($arglist, 2);
		$width:  map-get($map, width)  or nth-or-null($arglist, 1);
		$ratio:  map-get($map, ratio)  or if($width and $height, $width/$height, nth-or-null($arglist, 1)) or 1;
		$padding: 1/$ratio * 100%;
		&::before, &::after {
			clear: both;
			content: '';
			display: table;
			margin-left:-1px;
			width:1px;
		}
		&::before {
			float: left;
			padding-bottom: $padding;
		}    
	}
	// Helper function 
	// Return null rather than throwing an error if index is outside list range.    
	@function nth-or-null($list, $index) {
	  @return if(length($list) >= $index, nth($list, $index), null);
	}
@mixin transform-origin($origin){
	-webkit-transform-origin: $origin;
	transform-origin: $origin;
}
@mixin transform($transform){
	-webkit-transform: $transform;
	-ms-transform: $transform;
	transform: $transform;
}
@mixin translate($x,$y){
	@include transform(translate3d($x,$y,0));
}
@mixin translateX($x){
	@include transform(translate3d($x,0,0));
}
@mixin translateY($y){
	@include transform(translate3d(0,$y,0));
}
@mixin rotate($deg){
	@include transform(rotate($deg));
}
@mixin scale($x,$y){
	@include transform(scale($x,$y));
}
@mixin scaleX($x){
	@include transform(scaleX($x));
}
@mixin scaleY($y){
	@include transform(scaleY($y));
}